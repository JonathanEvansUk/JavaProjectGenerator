package {{packageName}};

import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Optional;
{{#imports}}
import {{.}};
{{/imports}}

@Service
public class {{className}} {

  private final {{repositoryType}} {{repositoryName}};
  private final {{dtoConverterType}} {{dtoConverterName}};

  public {{className}}({{repositoryType}} {{repositoryName}}, {{dtoConverterType}} {{dtoConverterName}}) {
    this.{{repositoryName}} = {{repositoryName}};
    this.{{dtoConverterName}} = {{dtoConverterName}};
  }

  public List<{{dtoType}}> findAll() {
    return {{repositoryName}}.findAll()
        .stream()
        .map(this::convert)
        .toList();
  }

  public Optional<{{dtoType}}> findById({{entityIdType}} id) {
    return {{repositoryName}}.findById(id)
        .map(this::convert);
  }

  public {{dtoType}} save({{dtoType}} {{dtoNameCamel}}) {

    {{entityType}} {{entityNameCamel}} = convert({{dtoNameCamel}});

    {{#fields}}
      {{#isOneToMany}}
        {{name}}
      {{/isOneToMany}}
    {{/fields}}

    {{entityType}} saved{{entityType}} = {{repositoryName}}.save({{entityNameCamel}});

    return convert(saved{{entityType}});
  }

  public Optional<{{dtoType}}> delete({{entityIdType}} id) {
    Optional<{{entityType}}> {{entityNameCamel}} = {{repositoryName}}.findById(id);

    if ({{entityNameCamel}}.isPresent()) {
      {{repositoryName}}.delete({{entityNameCamel}}.get());
    }

    return {{entityNameCamel}}.map(this::convert);
  }

  private {{entityType}} convert({{dtoType}} {{dtoNameCamel}}) {
    return {{dtoConverterName}}.convert({{dtoNameCamel}});
  }

  private {{dtoType}} convert({{entityType}} {{entityNameCamel}}) {
    return {{dtoConverterName}}.convert({{entityNameCamel}});
  }
}
