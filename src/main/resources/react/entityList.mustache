import { useEffect, useState } from "react";
import Table from "react-bootstrap/Table";
import Card from "react-bootstrap/Card";
import Button from "react-bootstrap/Button";
import { Link } from "react-router-dom";
import DeleteModal from "../../utils/DeleteModal";
import DeleteButton from "../../utils/DeleteButton";

export default function {{model.nameCapitalised}}List() {
  let [{{model.name}}List, set{{model.nameCapitalised}}List] = useState([]);

  const [showDelete, setShowDelete] = useState(false);
  const [deleteId, setDeleteId] = useState(null);
  const hideDelete = () => setShowDelete(false);
  const handleDeleteShow = deleteId => {
    setShowDelete(true);
    setDeleteId(deleteId);
  };

  useEffect(() => {
    fetch("http://localhost:8080/{{model.name}}")
    .then(response => response.json())
    .then(data => {
      set{{model.nameCapitalised}}List(data);
    });
  },[]);

  const tableHeaders = [
    {{#model.fields}}
      "{{name}}"{{^-last}},{{/-last}}
    {{/model.fields}}
  ];

  console.log({{model.name}}List);
  const rows = {{model.name}}List.map({{model.name}} => createRow({{model.name}}, tableHeaders, handleDeleteShow));

  const performDelete = deleteId => {
    console.log("Deleting: ", deleteId);
    fetch(`http://localhost:8080/{{model.name}}/${deleteId}`, {
      method: "DELETE"
    })
      .then(() => set{{model.nameCapitalised}}List({{model.name}}List.filter({{model.name}} => {{model.name}}.id !== deleteId)))
      .then(() => setDeleteId(null))
      .then(() => hideDelete());
  };

  return (
    <Card>
      <Card.Header className="d-flex justify-content-between align-items-center">
        <h4 className="m-0 font-weight-normal">{{model.nameCapitalised}}</h4>
        <Button as={Link} to="/{{model.name}}">
          Create a {{model.nameCapitalised}}
        </Button>
      </Card.Header>
      <Table>
        <thead>
          <tr>
            {tableHeaders.map(header => <th key={header}>{header}</th>)}
          </tr>
        </thead>

        <tbody>
        {rows}
        </tbody>
      </Table>

      <DeleteModal
          show={showDelete}
          title="Delete {{model.nameCapitalised}}"
          body={`Are you sure you want to delete {{model.nameCapitalised}}: ${deleteId}`}
          hide={hideDelete}
          action={() => performDelete(deleteId)}
      />
    </Card>);
};

const createRow = ({{model.name}}, tableHeaders, handleDeleteShow) => {
  return (
    <tr key={ {{model.name}}.id }>{tableHeaders.map(header => <td key={header}>{ {{model.name}}[header] }</td>)}
      <td>
        <div className="float-right">
          <Button as={Link} to={"/{{model.name}}/" + {{model.name}}.id} variant="info" size="sm">
            <i className="bi bi-eye-fill pr-1"></i>
            View</Button>
          <Button className="mx-sm-1" as={Link} to={"/{{model.name}}/" + {{model.name}}.id + "/edit"} variant="primary" size="sm">
            <i className="bi bi-pencil-fill pr-1"></i>
            Edit</Button>
          <DeleteButton id={ {{model.name}}.id } handleDeleteShow={handleDeleteShow} />
        </div>
      </td>
    </tr>
  );
};